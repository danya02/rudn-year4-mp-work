{"pii": "S1319157824001952", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "id": "d1e925", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e926"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "d1e928", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e929", "view": "all"}, "_": "Dynamic searchable symmetric encryption(DSSE) combines dynamic update with searchable encryption, allowing users to not only achieve keyword retrieval, but also dynamically update encrypted data stored on semi-trusted cloud server, effectively protecting user\u2019s privacy. However, the majority of existing DSSE schemes exhibit inefficiencies in practical applications because of their complex structure. In addition, to store the status of keywords, the storage requirements of the client increase proportionally with the number of keyword/document pairs. Therefore, the client storage will be overwhelmed when confronted with a substantial increase in the volume of keyword/document pairs. To solve these issues, we propose a practical efficient dynamic searchable symmetric encryption scheme with lightweight clients\u2014CoD-DSSE. A novel index structure similar to a chest of drawers is proposed in CoD-DSSE, which allows users to efficiently search all document indexes through XOR operations and keeps the keyword status on the server to lightweight clients. Furthermore, we use a random number generator to construct new search tokens for forward security and achieve backward security by using a Bloom filter to store the deleted document index, which can significantly reduce communication costs. The experimental and security analyses show that CoD-DSSE is efficient and secure in practice."}]}]}]}}