{"pii": "S002200001200147X", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "attachments", "$$": [{"#name": "attachment", "$": {"xmlns:xocs": true}, "$$": [{"#name": "attachment-eid", "_": "1-s2.0-S002200001200147X-si1.gif"}, {"#name": "ucs-locator", "_": "https://s3.amazonaws.com/prod-ucs-content-store-us-east/content/pii:S002200001200147X/STRIPIN/image/gif/e302d941de22b49711f32c52c0d8915a/si1.gif"}, {"#name": "ucs-locator", "_": "https://s3-eu-west-1.amazonaws.com/prod-ucs-content-store-eu-west/content/pii:S002200001200147X/STRIPIN/image/gif/e302d941de22b49711f32c52c0d8915a/si1.gif"}, {"#name": "file-basename", "_": "si1"}, {"#name": "abstract-attachment", "_": "true"}, {"#name": "filename", "_": "si1.gif"}, {"#name": "extension", "_": "gif"}, {"#name": "filesize", "_": "205"}, {"#name": "pixel-height", "_": "11"}, {"#name": "pixel-width", "_": "25"}, {"#name": "attachment-type", "_": "ALTIMG"}]}]}, {"#name": "abstract", "$": {"class": "author", "id": "aep-abstract-id7"}, "$$": [{"#name": "section-title", "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "aep-abstract-sec-id8"}, "$$": [{"#name": "simple-para", "$": {"id": "sp0010", "view": "all"}, "$$": [{"#name": "__text__", "_": "Adaptive multi-route query processing (AMR) is an emerging paradigm for processing stream queries in highly fluctuating environments. The content of stream data can be unpredictable. Thus, instead of selecting a fixed plan, AMR dynamically routes batches of tuples to operators in the query network based on up-to-date system statistics. The workload of query access patterns in AMR systems is ever changing. Selecting a single best index may not efficiently support all query access patterns at all times. While maintaining multiple indices to match a variety of query access patterns increases overhead and decreases throughput. Index design, while paramount for efficient query execution, is particularly challenging in AMR systems as the indices must serve the continuously evolving query access patterns. Our proposed Adaptive Multi-Route Index (AMRI) employs a bitmap time-partitioned design that serves a diverse ever changing workload of query access patterns and remains lightweight in terms of maintenance and storage requirements. We propose a high quality yet efficient assessment method modeled after hierarchical heavy hitters that exploits route relationships by modeling the frequency of the search access patterns used as nodes in a lattice. We also design assessment scheduling methods for AMRI based upon detecting changes in the search access patterns used. Our AMRI incorporates migration strategies that seek to meet the needs of both old partially serviced and new incoming search requests. Our experimental study using both synthetic and real data streams demonstrates that AMRI strikes a balance between effectively supporting dynamic stream environments while keeping the index overhead to a minimum. Using an environmental data set collected in the Intel Berkeley Research lab, our AMRI produced on average "}, {"#name": "math", "$": {"xmlns:mml": true, "altimg": "si1.gif", "overflow": "scroll"}, "$$": [{"#name": "mn", "_": "68"}, {"#name": "mtext", "_": "%"}]}, {"#name": "__text__", "_": " more cumulative throughput than the state-of-the-art approach."}]}]}]}, {"#name": "abstract", "$": {"class": "graphical", "id": "aep-abstract-id9"}, "$$": [{"#name": "abstract-sec", "$": {"id": "aep-abstract-sec-id10"}, "$$": [{"#name": "section-title", "_": "Highlights"}, {"#name": "simple-para", "$": {"id": "sp0020", "view": "all"}, "_": "\u25ba Our index supports partially serviced and incoming search requests via a time-partitioned index structure. \u25ba We prove that the effect of statistic compaction on the potential loss of quality of the selected index can be bound. \u25ba Our Triggered method schedules assessment on states with observed routing shifts. \u25ba Our Partial Migration strategy migrates only some stored tuples based on their estimated future use."}]}]}]}}