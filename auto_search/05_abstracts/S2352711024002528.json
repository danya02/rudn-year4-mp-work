{"pii": "S2352711024002528", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "id": "d1e213", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e214"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "d1e216", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e217", "view": "all"}, "$$": [{"#name": "__text__", "_": "Time-sensitive networks, as in the context of IEEE-TSN and IETF-Detnet, require bounds on worst-case delays. Various network analysis tools compute such bounds; these tools are based on different methods and provide delay bounds that are all valid but may differ; furthermore, it is generally not known which tool will provide the best bound. To obtain the best possible bound, users need to implement multiple pieces of code with a different syntax for every tool, which is impractical and error-prone. To address this issue, we present Saihu, a Python interface that integrates the three most frequently used worst-case network analysis tools: xTFA, DiscoDNC, and Panco. They altogether implement six analysis methods. Saihu provides a general interface that enables defining a network in a single file and executing all tools simultaneously without any modification. Saihu further exports analysis results as formatted reports automatically and allows quick generation of certain types of networks. With its simplified steps of execution, Saihu reduces the burden on users and makes it accessible for anyone working with time-sensitive networks. An introductory video is available at "}, {"#name": "inter-ref", "$": {"xmlns:xlink": true, "id": "interref1", "href": "https://youtu.be/MiOhLay8Kr4", "type": "simple"}, "_": "https://youtu.be/MiOhLay8Kr4"}, {"#name": "__text__", "_": "."}]}]}]}]}}