{"pii": "S1319157822000945", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "lang": "en", "id": "ab005", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "st005"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "as005", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "sp0005", "view": "all"}, "_": "This research discusses the implementation experiment of an automatic translation of an unstructured Natural Language Question (NLQ) into a Structured Query Language (SQL) statement. SQL is used as a Relational DataBase (RDB) interaction language with special query syntax and a computer- executable artificial language. This way, DataBase (DB) administrators or general users with little or no SQL querying abilities can perform queries on RDBs in an interactive manner. The main goal of this work is to exploit a manually written rule- based mapping constraints algorithm. This algorithm maps NLQ tokens\u2019 semantic/syntactic information into RDB elements\u2019 semantic roles (i.e., value, attribute) via pairing and matching means. The matching RDB elements, called \u201cidentified lexica\u201d, are then mapped into the SQL clauses consistently for SQL generation and execution. The matching process uses a computational linguistic analysis mapping algorithm, represented in the MetaTables. This mapping algorithm proved to be efficient especially with small RDBs with an accuracy of 95% and is about 93% accurate with larger RDBS."}]}]}]}}