{"pii": "S0167739X24005302", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "id": "d1e412", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e413"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "d1e415", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e416", "view": "all"}, "_": "The adoption of smart contracts in decentralized blockchain-based applications enables reliable and certified audits. These audits allow the extraction of valuable information from blockchains, which can be used to reconstruct the execution of the application and facilitate advanced analyses. One of the most commonly used techniques in this context is process mining, which leverages event logs to trace and accurately represent the process execution of applications. However, extracting execution data from blockchains poses significant challenges, and the current methodologies developed have some limitations. Most approaches are tailored to specific use cases, requiring that analysis techniques are defined during the smart contract\u2019s development. Other techniques are applied a posteriori, relying on blockchain events that often lack a standardized format. This absence of standardization requires complex processing steps to correlate logs with the executed actions and such approaches are not universally applicable to all smart contracts on the blockchain, further limiting their scope. Lastly, none of the existing techniques can extract information from event logs embedded in internal transactions of smart contracts."}, {"#name": "simple-para", "$": {"id": "d1e418", "view": "all"}, "_": "To address these limitations, we propose EveLog an application-agnostic methodology that can be applied to any EVM-compatible application without predefined constraints. Its primary goal is to extract information from smart contracts, capturing both public and internal transactions, and organizing the results into a structured XES event log. The EveLog methodology consists of five key steps: (i) extraction of data from smart contract transactions, (ii) decoding raw data, (iii) selection of sorting criteria, (iv) construction of traces, and (v) generation of the XES event log. EveLog has been implemented in a client\u2013server application and tested on existing solutions, specifically the CryptoKitties application, a blockchain-based game on the Ethereum blockchain. The study was conducted using 12,996 blocks, including over 8000 real transactions from the Ethereum mainnet."}]}]}, {"#name": "abstract", "$": {"class": "author-highlights", "id": "d1e420", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e421"}, "_": "Highlights"}, {"#name": "abstract-sec", "$": {"id": "d1e423", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e424", "view": "all"}, "$$": [{"#name": "list", "$": {"id": "d1e426"}, "$$": [{"#name": "list-item", "$": {"id": "d1e427"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"id": "d1e430", "view": "all"}, "_": "We provide a novel extraction methodology for blockchain-based applications."}]}, {"#name": "list-item", "$": {"id": "d1e432"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"id": "d1e435", "view": "all"}, "_": "We developed a tool for extracting both public and internal transactions."}]}, {"#name": "list-item", "$": {"id": "d1e437"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"id": "d1e440", "view": "all"}, "_": "We support the XES generation and automatic trace construction."}]}]}]}]}]}]}}