{"pii": "S1319157824000314", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "id": "d1e233", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e234"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "d1e236", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e237", "view": "all"}, "_": "As the IoT devices are highly ubiquitous and connected, their computational tasks can be processed on the Multi-access edge computing (MEC) servers because of the IoT devices\u2019 limited battery, computing power and storage capacities. Due to the heterogeneity of IoT devices and MEC devices\u2019 limited capabilities, tasks should be offloaded efficiently to MEC servers mainly and then to the Clouds (fog nodes) if necessary for fulfilling tasks\u2019 computational requirements. The proposed solution presents a task offloading decision using base stations of the network and queued task scheduling. The base station, which is the edge orchestrator, will decide on where to offload (edge servers or cloud) or compute locally. For handling heterogeneous tasks, a maximum tolerable latency is included. It is shown that a 3% to 7% improvement in the number of failed tasks, more than 7.4% in the number of successfully completed tasks, an improvement by more than 0.85 s in the average execution time and more than 7% in network communication, which directly impacts the energy of edge devices. The simulation results show that this work performed better in decreasing the number of failed tasks due to latency, decreasing energy consumption and minimizing the average execution time of tasks."}]}]}]}}