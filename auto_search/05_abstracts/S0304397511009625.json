{"pii": "S0304397511009625", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"lang": "en", "class": "author", "id": "aep-abstract-id5"}, "$$": [{"#name": "section-title", "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "aep-abstract-sec-id6"}, "$$": [{"#name": "simple-para", "$": {"id": "sp000005", "view": "all"}, "$$": [{"#name": "__text__", "_": "Wavelet trees are widely used in the representation of sequences, permutations, text collections, binary relations, discrete points, and other succinct data structures. We show, however, that this still falls short of exploiting all of the virtues of this versatile data structure. In particular we show how to use wavelet trees to solve fundamental algorithmic problems such as "}, {"#name": "italic", "_": "range quantile"}, {"#name": "__text__", "_": " queries, "}, {"#name": "italic", "_": "range next value"}, {"#name": "__text__", "_": " queries, and "}, {"#name": "italic", "_": "range intersection"}, {"#name": "__text__", "_": " queries. We explore several applications of these queries in Information Retrieval, in particular "}, {"#name": "italic", "_": "document retrieval"}, {"#name": "__text__", "_": " in hierarchical and temporal documents, and in the representation of "}, {"#name": "italic", "_": "inverted lists"}, {"#name": "__text__", "_": "."}]}]}]}]}}