{"pii": "S266591742300079X", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"lang": "en", "id": "abs0010", "view": "all", "class": "author"}, "$$": [{"#name": "section-title", "$": {"id": "sectitle0010"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "abssec0010", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "abspara0010", "view": "all"}, "_": "Sensor Nodes (SNs) in Wireless sensor networks (WSNs) continuously monitor the environment and accumulate data. But due to the limited memory and processing capabilities of the sensor nodes, the data must be transmitted to the central server for further analysis. To do this, routing via multi-hop channel is used which consumes a lot of particular SN's energy and also utilizes the resources, including the battery and memory of all the SN's involved in routing. This process drains the SN's energy rapidly and further leading to disconnection from the central server. To address this issue, mobile sink concept is introduced. The mobile sink collects the data from the SN's and hands it over to the central server which reduces the SN's involvement in data transmitting, but this process involves computationally complex tasks. In this context, we use linear programming to find the best visiting order to collect the information from a set of prioritized SN's, where other nodes transmit their data to them. We confirm that this process is computationally lightweight. In addition, this approach meat the performance criteria such as the lifespan of WSNs, the usage of buffer, throughput, and delay. We simulate the proposed model using Python, and they show improvement in efficiency when tested with different metrics of WSNs."}]}]}]}}