{"pii": "S0167739X24004217", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "id": "d1e338", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e339"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "d1e341", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e342", "view": "all"}, "_": "The Open MPI library is widely employed for implementing the message-passing programming model on parallel applications running on distributed memory computer systems, such as large data centers. These applications aim to utilize the highest amount of resources required by High Performance Computing (HPC). The interconnection network is an essential part of the HPC environment, as processes on parallel applications are constantly communicating and sharing data. Software Defined Networking (SDN) is a different networking approach that separates the control plane from the data forwarding plane, which can be configured depending on the network status or specific requirements of parallel application communications. Given that the communication time significantly contributes to the overall execution time of a parallel program and considering the elapsed time during Open MPI initialization of TCP connections between processes in Ethernet networks, this paper proposes the integration of a software defined networking environment into the Open MPI library. The primary objective of our contribution is to provide the network controller with information about Open MPI processes, in order to configure the network during the initialization procedure of the Open MPI library. This may facilitate the development of SDN-based routing techniques that reduce communication times, and thus execution times, using application information, such as the Open MPI endpoints participating in a parallel program execution. To demonstrate the utility of the information provided by Open MPI processes, we have implemented a routing algorithm that will calculate the optimal paths between processes based on the weighted Dijkstra algorithm, using the number of flows traversing the topology links. The evaluation of the proposed mechanism utilizing a 2-stage fat tree topology and two parallel applications - a matrix product and the Model for Prediction Across Scales (MPAS) - showed significant improvements in execution time, with reductions of up to 2.5 times for a 4096 \u00d7 4096 matrix product and 1.3 times for an 8192 \u00d7 8192 matrix product, as well as a 1.5 times reduction for MPAS in the worst network occupancy scenario. This demonstrates the improvements in communication and therefore execution time."}]}]}, {"#name": "abstract", "$": {"class": "author-highlights", "id": "d1e344", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e345"}, "_": "Highlights"}, {"#name": "abstract-sec", "$": {"id": "d1e347", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e348", "view": "all"}, "$$": [{"#name": "list", "$": {"id": "d1e350"}, "$$": [{"#name": "list-item", "$": {"id": "d1e351"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"id": "d1e354", "view": "all"}, "_": "Software Defined Network environment integration into Open MPI library."}]}, {"#name": "list-item", "$": {"id": "d1e356"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"id": "d1e359", "view": "all"}, "_": "Open MPI processes initialization time on Ethernet networks."}]}, {"#name": "list-item", "$": {"id": "d1e361"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"id": "d1e364", "view": "all"}, "_": "Impact of communication time in Open MPI processes."}]}, {"#name": "list-item", "$": {"id": "d1e366"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"id": "d1e369", "view": "all"}, "_": "Reduction of execution time in Open MPI processes by optimizing communication time."}]}]}]}]}]}]}}