{"pii": "014193319390056D", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "id": "aep-abstract-id3"}, "$$": [{"#name": "section-title", "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "aep-abstract-sec-id4"}, "$$": [{"#name": "simple-para", "$": {"view": "all"}, "$$": [{"#name": "__text__", "_": "In this paper, we consider the many-to-one packet routing problem on the mesh parallel architecture. This problem has not been considered before. It models the communication pattern that occurs when many processors try to write on the same memory location on a concurrent-read concurrent-write shared memory parallel machine. We show that there is an instance of the many-to-one packet routing problem that requires "}, {"#name": "italic", "_": "n"}, {"#name": "__text__", "_": "\u221a"}, {"#name": "italic", "_": "k"}, {"#name": "__text__", "_": "/2 routing steps to be solved, where "}, {"#name": "italic", "_": "k"}, {"#name": "__text__", "_": " is the maximum number of packets a processor can receive. We give an algorithm that solves the problem in asymptotically optimal time. Furthermore, our algorithm uses queues of small constant size. This queue bound is very important since the ability to expand the mesh is preserved. Finally, we consider two variations of the many-to-one packet routing problem, namely, the case where "}, {"#name": "italic", "_": "k"}, {"#name": "__text__", "_": " is not known in advance, and the case where combining the packets that are destined for the same processor is allowed."}]}]}]}]}}