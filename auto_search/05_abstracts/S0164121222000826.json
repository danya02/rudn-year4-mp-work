{"pii": "S0164121222000826", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "view": "all", "id": "d1e1159"}, "$$": [{"#name": "section-title", "$": {"id": "d1e1160"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"view": "all", "id": "d1e1162"}, "$$": [{"#name": "simple-para", "$": {"view": "all", "id": "d1e1163"}, "_": "Empirical results in software engineering have long started to show that findings are unlikely to be applicable to all software systems, or any domain: results need to be evaluated in specified contexts, and limited to the type of systems that they were extracted from. This is a known issue, and requires the establishment of a classification of software types."}, {"#name": "simple-para", "$": {"view": "all", "id": "d1e1165"}, "_": "This paper makes two contributions: the first is to evaluate the quality of the current software classifications landscape. The second is to perform a case study showing how to create a classification of software types using a curated set of software systems."}, {"#name": "simple-para", "$": {"view": "all", "id": "d1e1167"}, "_": "Our contributions show that existing, and very likely even new, classification attempts are deemed to fail for one or more issues, that we named as the \u2018antipatterns\u2019 of software classification tasks. We collected 7 of these antipatterns that emerge from both our case study, and the existing classifications."}, {"#name": "simple-para", "$": {"view": "all", "id": "d1e1169"}, "_": "These antipatterns represent recurring issues in a classification, so we discuss practical ways to help researchers avoid these pitfalls. It becomes clear that classification attempts must also face the daunting task of formulating a taxonomy of software types, with the objective of establishing a hierarchy of categories in a classification."}]}]}, {"#name": "abstract", "$": {"class": "author-highlights", "view": "all", "id": "d1e1171"}, "$$": [{"#name": "section-title", "$": {"id": "d1e1172"}, "_": "Highlights"}, {"#name": "abstract-sec", "$": {"view": "all", "id": "d1e1174"}, "$$": [{"#name": "simple-para", "$": {"view": "all", "id": "d1e1175"}, "$$": [{"#name": "list", "$": {"id": "d1e1177"}, "$$": [{"#name": "list-item", "$": {"id": "d1e1178"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"view": "all", "id": "d1e1181"}, "_": "Current software classification datasets lack generalizability."}]}, {"#name": "list-item", "$": {"id": "d1e1183"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"view": "all", "id": "d1e1186"}, "_": "We identified 7 antipatterns that pervade software classification."}]}, {"#name": "list-item", "$": {"id": "d1e1188"}, "$$": [{"#name": "label", "_": "\u2022"}, {"#name": "para", "$": {"view": "all", "id": "d1e1191"}, "_": "Hierarchical aggregation of categories can reduce some of the antipatterns."}]}]}]}]}]}]}}