{"pii": "S2468227623003204", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "id": "d1e1133", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e1134"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "d1e1136", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e1137", "view": "all"}, "_": "The rapid increase of the internet users has resulted in significant growth of the online traffic, hence, putting more demand on the network. This has led to a high prevalence of link failures on the network. Upon failure, a network should be able to return to normal operational status within a considerable amount of time to avoid unavailability. This is done by employing link failure recovery strategies or mechanisms. A desirable recovery mechanism is one that enhances the reliability of the network, maintains low communication latency, and reduces the memory utilization of switching devices. In the common traditional network, it is a challenging task to determine the backup paths since the topology is static. Software Defined Networking (SDN) architecture separates the control plane from the data plane, thus enabling dynamic network configuration and programmability. Hence, SDN enables network engineers to create both proactive and reactive backup paths in the network controller. Link failure is considered one of the most current research challenges in computer networks. This review paper analyse and compares the literature on recent SDN link failure recovery strategies. The existing link failure recovery techniques, their challenges, limitations, performance criteria, technologies/tools mostly adopted, and also the outline of how they can be improved is discussed."}]}]}]}}