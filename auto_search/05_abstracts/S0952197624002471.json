{"pii": "S0952197624002471", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "id": "d1e511", "view": "all"}, "$$": [{"#name": "section-title", "$": {"id": "d1e512"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"id": "d1e514", "view": "all"}, "$$": [{"#name": "simple-para", "$": {"id": "d1e515", "view": "all"}, "_": "During the concept design of complex networked systems, concept developers have to ensure that the choice of hardware modules and the topology of the target platform will provide adequate resources to support the needs of the application. For example, future-generation aerospace systems need to consider multiple requirements, with many trade-offs, foreseeing rapid technological change and a long period for realization and service. For that purpose, we introduce NetGAP, an automated 3-phase approach to synthesize network topologies and support the exploration and concept design of networked systems with multiple requirements including dependability, security, and performance. NetGAP represents the possible interconnections between hardware modules using a graph grammar and uses a Monte Carlo Tree Search optimization to generate candidate topologies from the grammar while aiming to satisfy the requirements. We apply the proposed approach to a synthetic version of a realistic avionics application use case. It includes 99 processes and 660 messages. The experiment shows the merits of the solution to support the early-stage exploration of alternative candidate topologies. The method vividly characterizes the topology-related trade-offs between requirements stemming from security, fault tolerance, timeliness, and the \u201ccost\u201d of adding new modules or links. We also create a scaled-up version of the problem (267 processes, 1887 messages) to illustrate scalability. Finally, we discuss the flexibility of using the approach when changes in the application and its requirements occur."}]}]}]}}