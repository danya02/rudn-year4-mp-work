{"pii": "S2352711018300712", "abstracts": {"#name": "abstracts", "$": {"xmlns:ce": true, "xmlns:dm": true, "xmlns:sb": true}, "$$": [{"#name": "abstract", "$": {"class": "author", "view": "all", "id": "d1e186"}, "$$": [{"#name": "section-title", "$": {"id": "d1e187"}, "_": "Abstract"}, {"#name": "abstract-sec", "$": {"view": "all", "id": "d1e189"}, "$$": [{"#name": "simple-para", "$": {"view": "all", "id": "d1e190"}, "$$": [{"#name": "__text__", "_": "Empirical software engineering work often involves studying revision control system repositories maintained using the popular Git system. Checking out each revision one wants to study is inefficient. On the other hand the examination of directories and files of past revisions using Git\u2019s commands suffers from a usability perspective. We introduce "}, {"#name": "small-caps", "_": "r"}, {"#name": "__text__", "_": "epo"}, {"#name": "small-caps", "_": "fs"}, {"#name": "__text__", "_": ", a tool that exposes a Git repository as a virtual user-level file system. Commits, branches, and tags appear as separate directory trees allowing them to be efficiently processed through command-line tools and file explorers. We illustrate these points through motivating examples and discuss the advantages and drawbacks of the proposed approach."}]}]}]}]}}